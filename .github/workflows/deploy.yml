name: Deploying to Production

on:
  push:
    branches:
      - staging
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}:latest

      - name: Releasing New Version
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Stop and remove existing container if it exists
            docker rm -f web_server || true
            
            # Remove old image (optional, for clean pulls)
            docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}:latest || true
            
            # Pull latest image
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}:latest
            
            # Run new container
            docker run -d \
              --name=web_server \
              --network=host \
              -p 8080:8080 \
              -e DB_HOST=${{ secrets.PROD_DB_HOST }} \
              -e DB_PORT=${{ secrets.PROD_DB_PORT }} \
              -e DB_NAME=${{ secrets.PROD_DB_NAME }} \
              -e DB_USERNAME=${{ secrets.PROD_DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }} \
              -e JWT_SECRET=${{ secrets.PROD_JWT_SECRET }} \
              ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}:latest